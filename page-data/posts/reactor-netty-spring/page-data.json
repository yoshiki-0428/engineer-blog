{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/reactor-netty-spring","result":{"data":{"markdownRemark":{"id":"02e8ae90-145f-5445-a71a-cd3fbcf46c6a","html":"<h1 id=\"はじめに\" style=\"position:relative;\"><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\" aria-label=\"はじめに permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>はじめに</h1>\n<p>Spring 5のWebFluxから導入されているReactor.nettyのWebサーバですが、環境変数でConnection数や接続待ち時間などをコントロールできます。</p>\n<h1 id=\"trtd\" style=\"position:relative;\"><a href=\"#trtd\" aria-label=\"trtd permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TR;TD</h1>\n<p>結論、Javaの実行引数の後ろに<code class=\"language-text\">Java Ops</code>を設定するとWebサーバに反映されます。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">java hoge.jar \n    -Dreactor.netty.pool.leasingStrategy=lifo\n    -Dreactor.netty.pool.maxConnections=200\n    -Dreactor.netty.pool.maxIdleTime=60000</code></pre></div>\n<blockquote>\n<p>環境変数に反映したり、ymlに定義もしましたが、そちらでは反映されなかったです</p>\n</blockquote>\n<h3 id=\"設定されているか確認する\" style=\"position:relative;\"><a href=\"#%E8%A8%AD%E5%AE%9A%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B%E3%81%8B%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B\" aria-label=\"設定されているか確認する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>設定されているか確認する</h3>\n<p><a href=\"https://github.com/reactor/reactor-netty/blob/master/src/main/java/reactor/netty/ReactorNetty.java#L75-L155\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">ReactorNetty.java</a> の設定をデバッグで求めてもいいですが、設定されてるかどうかReactor.nettyのログを出して確認しましょう。</p>\n<p>手順的にはreactor.nettyのログをDEBUGにしたら完了です</p>\n<div class=\"gatsby-highlight\" data-language=\"yml:application.yml\"><pre class=\"language-yml:application.yml\"><code class=\"language-yml:application.yml\">logging:\n  level:\n    root: INFO\n    reactor.netty.resources: DEBUG</code></pre></div>\n<p>こんな感じのログが出るはずです。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">2020-06-30 19:09:46.129 DEBUG 65391 --- [ioEventLoop-5-1] \nr.n.resources.PooledConnectionProvider   : Creating a new client pool\n[PoolFactory {maxConnections=200, pendingAcquireMaxCount=-1, \npendingAcquireTimeout=45000, maxIdleTime=60000, maxLifeTime=-1, metricsEnabled=false}] for [xxx.xxx.xxx:443]</code></pre></div>\n<p>参考になれば幸いです🤗</p>\n<h1 id=\"参考url\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83url\" aria-label=\"参考url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考URL</h1>\n<ul>\n<li><a href=\"https://projectreactor.io/docs/netty/release/reference/index.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Reactor Netty Reference</a></li>\n<li><a href=\"https://github.com/reactor/reactor-netty\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Reactor Netty GitHub</a></li>\n<li><a href=\"https://github.com/reactor/reactor-netty/issues/938\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GitHub issue</a></li>\n</ul>","fields":{"slug":"/posts/reactor-netty-spring","tagSlugs":["/tags/reactor-netty/","/tags/spring/"]},"frontmatter":{"date":"2020-06-24T09:00:00.000Z","updatedDate":null,"tags":["Reactor Netty","Spring"],"title":"【Reactor.netty x Spring】 環境変数をコントロールする","socialImage":"https://ucarecdn.com/c888768a-1a82-40ed-8e22-90ba29c5e962/","category":"Programming"},"excerpt":"はじめに Spring 5のWebFluxから導入されているReactor.nettyのWebサーバですが、環境変数でConnection数や接続待ち時間などをコントロールできます。 TR;TD 結論、Javaの実行引数の後ろにを設定するとWebサーバに反映されます。 環境変数…","tableOfContents":"<ul>\n<li><a href=\"/posts/reactor-netty-spring/#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\">はじめに</a></li>\n<li>\n<p><a href=\"/posts/reactor-netty-spring/#trtd\">TR;TD</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/posts/reactor-netty-spring/#%E8%A8%AD%E5%AE%9A%E3%81%95%E3%82%8C%E3%81%A6%E3%81%84%E3%82%8B%E3%81%8B%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B\">設定されているか確認する</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/posts/reactor-netty-spring/#%E5%8F%82%E8%80%83url\">参考URL</a></li>\n</ul>"}},"pageContext":{"slug":"/posts/reactor-netty-spring"}},"staticQueryHashes":["1552397463","1669302033","3314088506","401334301","554596625","82304099"]}