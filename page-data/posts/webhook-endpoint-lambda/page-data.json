{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/webhook-endpoint-lambda","result":{"data":{"markdownRemark":{"id":"18165df3-10af-5967-bed2-df24489f0939","html":"<h1 id=\"はじめに\" style=\"position:relative;\"><a href=\"#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\" aria-label=\"はじめに permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>はじめに</h1>\n<p>エンジニアの皆さんWebhook使っていますか？というかほとんどのエンジニアが自然と使っていますよね。</p>\n<p>今回はSlackなどのWebhook EndpointをAWS Lambdaで自作してしまおうという内容です！</p>\n<h1 id=\"内容\" style=\"position:relative;\"><a href=\"#%E5%86%85%E5%AE%B9\" aria-label=\"内容 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>内容</h1>\n<h2 id=\"そもそもwebhookとは\" style=\"position:relative;\"><a href=\"#%E3%81%9D%E3%82%82%E3%81%9D%E3%82%82webhook%E3%81%A8%E3%81%AF\" aria-label=\"そもそもwebhookとは permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>そもそもWebhookとは</h2>\n<p>Webアプリケーションでイベントが実行された際、外部サービスにHTTP POSTで通知する仕組みです。</p>\n<p>Slackなどの特定のイベントが発火されたら別のAPIサーバに対してHTTP POSTのリクエストを行う仕組みのことですね。</p>\n<h2 id=\"aws-api-gatewayとlambdaを使用してpostエンドポイントの作成\" style=\"position:relative;\"><a href=\"#aws-api-gateway%E3%81%A8lambda%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6post%E3%82%A8%E3%83%B3%E3%83%89%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E3%81%AE%E4%BD%9C%E6%88%90\" aria-label=\"aws api gatewayとlambdaを使用してpostエンドポイントの作成 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AWS API GatewayとLambdaを使用してPostエンドポイントの作成</h2>\n<p>まずはAWS Consoleにサインインしましょう。</p>\n<h3 id=\"lambdaの作成\" style=\"position:relative;\"><a href=\"#lambda%E3%81%AE%E4%BD%9C%E6%88%90\" aria-label=\"lambdaの作成 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lambdaの作成</h3>\n<p>Lambdaを作成します。Lambdaとは一言でいうと<strong>関数</strong>のことです。「WebhookをトリガーにLambdaで処理を行う」ための肝心の処理部分をLambdaで作成します。</p>\n<p>今回は手動で作成することが前提です。</p>\n<p>Lambdaを作成して、「一から作成」をクリックしてLambdaを作成しましょう。</p>\n<p>名前とかは何でもいいのでとりあえずPythonにしておきます。</p>\n<p><img src=\"https://ucarecdn.com/2eb3b3bb-8e40-4d29-8f23-3feba0b0d38d/\"></p>\n<p>ソースコードはとりあえずログを表示するだけのコードです。</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> json\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">lambda_handler</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    payload <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>dumps<span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Payload '</span> <span class=\"token operator\">+</span> payload<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"api-gatewayの作成\" style=\"position:relative;\"><a href=\"#api-gateway%E3%81%AE%E4%BD%9C%E6%88%90\" aria-label=\"api gatewayの作成 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>API Gatewayの作成</h3>\n<p>API Gatewayを検索してAPIを作成します。</p>\n<p><img src=\"https://ucarecdn.com/5a92de16-eb3b-41f1-b00d-583d1d7a9246/\"></p>\n<p>今回は<strong>REST</strong>を選択してAPIを作成。</p>\n<p>そしたら、アクションを選択してメソッドの作成を選択。</p>\n<p><img src=\"https://ucarecdn.com/2e752d09-df7e-45d1-a57b-33c1c9007181/\"></p>\n<p>ここで先ほど作成したLambdaとつなげましょう。関数の名前とリンクしているようです。</p>\n<p><img src=\"https://ucarecdn.com/34a114ee-62c6-4dbe-a4df-53f824d784d2/\"></p>\n<p>Lambdaのページに行ってつながっているか確認しましょう。こんな図になっていたらOKです。</p>\n<p><img src=\"https://ucarecdn.com/7f68a74b-1328-4bf9-bc21-469c03ad3405/\"></p>\n<p>あとはAPIをデプロイするだけです。</p>\n<p><img src=\"https://ucarecdn.com/7d42e3d6-6d7b-40d5-9e19-f24c634544cf/\"></p>\n<blockquote>\n<p>エンドポイントが公開されることになるのでセキュリティ無設定で公開すること早めておきましょう。今回は検証なのでそのままです。</p>\n</blockquote>\n<h3 id=\"ローカルでpostして動作するか確認する\" style=\"position:relative;\"><a href=\"#%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%A7post%E3%81%97%E3%81%A6%E5%8B%95%E4%BD%9C%E3%81%99%E3%82%8B%E3%81%8B%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B\" aria-label=\"ローカルでpostして動作するか確認する permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ローカルでPostして動作するか確認する</h3>\n<p>curlでPostしてみましょう。</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ curl -X POST -H &quot;Content-Type: application/json&quot; -d &#39;{&quot;message&quot;:&quot;it is test&quot;}&#39;  https://{your-api-gateway-domain}.us-east-1.amazonaws.com/</code></pre></div>\n<p>ログにPostしたデータが表示されているはずです。</p>\n<h1 id=\"まとめ\" style=\"position:relative;\"><a href=\"#%E3%81%BE%E3%81%A8%E3%82%81\" aria-label=\"まとめ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>まとめ</h1>\n<p>最速で5分もかからずにAPI Postエンドポイントを作成することができました。ちょっとした処理とかだったらすぐ作れるのでホント便利ですねー。</p>\n<p>ここまでできたらあとは、esa.ioの記事作成のイベントをwebhookでAWS側で保存したり、Slackに通知したりと幅が広がるので知っておくとお得ですね🤗</p>\n<h1 id=\"参考\" style=\"position:relative;\"><a href=\"#%E5%8F%82%E8%80%83\" aria-label=\"参考 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>参考</h1>\n<ul>\n<li><a href=\"https://kintone-blog.cybozu.co.jp/developer/000283.html#:~:text=Webhook%E3%81%A8%E3%81%AF%EF%BC%88%E7%95%A5%EF%BC%89%E3%80%81,%E3%81%A7%E9%80%9A%E7%9F%A5%E3%81%99%E3%82%8B%E4%BB%95%E7%B5%84%E3%81%BF%E3%81%A7%E3%81%99%E3%80%82\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Webhookとは</a></li>\n</ul>","fields":{"slug":"/posts/webhook-endpoint-lambda","tagSlugs":["/tags/aws/","/tags/lambda/","/tags/webhook/"]},"frontmatter":{"date":"2020-06-04T14:14:41.187Z","updatedDate":null,"tags":["AWS","Lambda","Webhook"],"title":"WebhookのEndpointをLambdaでつくる","socialImage":"https://ucarecdn.com/ce66c6a5-cd58-43b2-8b72-317d063c1b16/","category":"Programming"},"excerpt":"はじめに エンジニアの皆さんWebhook使っていますか？というかほとんどのエンジニアが自然と使っていますよね。 今回はSlackなどのWebhook EndpointをAWS Lambdaで自作してしまおうという内容です！ 内容 そもそもWebhookとは Webアプリケーシ…","tableOfContents":"<ul>\n<li><a href=\"/posts/webhook-endpoint-lambda/#%E3%81%AF%E3%81%98%E3%82%81%E3%81%AB\">はじめに</a></li>\n<li>\n<p><a href=\"/posts/webhook-endpoint-lambda/#%E5%86%85%E5%AE%B9\">内容</a></p>\n<ul>\n<li><a href=\"/posts/webhook-endpoint-lambda/#%E3%81%9D%E3%82%82%E3%81%9D%E3%82%82webhook%E3%81%A8%E3%81%AF\">そもそもWebhookとは</a></li>\n<li>\n<p><a href=\"/posts/webhook-endpoint-lambda/#aws-api-gateway%E3%81%A8lambda%E3%82%92%E4%BD%BF%E7%94%A8%E3%81%97%E3%81%A6post%E3%82%A8%E3%83%B3%E3%83%89%E3%83%9D%E3%82%A4%E3%83%B3%E3%83%88%E3%81%AE%E4%BD%9C%E6%88%90\">AWS API GatewayとLambdaを使用してPostエンドポイントの作成</a></p>\n<ul>\n<li><a href=\"/posts/webhook-endpoint-lambda/#lambda%E3%81%AE%E4%BD%9C%E6%88%90\">Lambdaの作成</a></li>\n<li><a href=\"/posts/webhook-endpoint-lambda/#api-gateway%E3%81%AE%E4%BD%9C%E6%88%90\">API Gatewayの作成</a></li>\n<li><a href=\"/posts/webhook-endpoint-lambda/#%E3%83%AD%E3%83%BC%E3%82%AB%E3%83%AB%E3%81%A7post%E3%81%97%E3%81%A6%E5%8B%95%E4%BD%9C%E3%81%99%E3%82%8B%E3%81%8B%E7%A2%BA%E8%AA%8D%E3%81%99%E3%82%8B\">ローカルでPostして動作するか確認する</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/posts/webhook-endpoint-lambda/#%E3%81%BE%E3%81%A8%E3%82%81\">まとめ</a></li>\n<li><a href=\"/posts/webhook-endpoint-lambda/#%E5%8F%82%E8%80%83\">参考</a></li>\n</ul>"}},"pageContext":{"slug":"/posts/webhook-endpoint-lambda"}},"staticQueryHashes":["1552397463","1669302033","3314088506","401334301","554596625","82304099"]}